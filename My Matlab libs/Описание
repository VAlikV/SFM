Общие функции:

d = Distance(Node1, Node2) % Расстояние между двумя точками
Node - массив [x y z]
d - значение

di = DistanceROI(Node, ROI) % Массив расстояний между точкой и массивом ROI
Node - массив [x y z]
ROI - массив [x1 y1 z1; x2 y2 z2; ... xn yn zn]
di - массив [r1; r2; ... rn]

p = ScalarP(Vector1, Vector2) % Скалярное произведение
Vector - массив [x y z]
p - значение

[Lx, Ly, BB] = Transform2D(lx, ly, nx, ny, B) % Преобразование массива вида B в двумерный массив для построения
B - массив вида [a1; a2; ... an] (величина, зависящая от координат, например значение поля в плоскости)
nx, ny - размерность конечного двумерного массива
lx, ly - размеры двумерного массива координат
Lx, Ly, BB - двумерные массивы пригодные к построению функцией surf или contourf

[X, Y, Z, B] = Transform3D(lx, ly, lz, nx, ny, nz, center, Bdes) % Преобразование массива вида B в трехмерный массив для обработки
Bdes - массив вида [a1; a2; ... an] (величина, зависящая от координат, например значение поля в плоскости)
nx, ny, nz - размерность конечного трехмерного массива
lx, ly, lz - размеры трехмерного массива координат
X, Y, Z, B - двумерные массивы пригодные к построению функцией surf или contourf

[dx, dy, dz] = VectorDistanceROI(Node, ROI) % Массив векторов расстояния между точкой и массивом ROI
Node - массив [x y z]
ROI - массив [x1 y1 z1; x2 y2 z2; ... xn yn zn]
[dx, dy, dz] - проекции расстояния между точками (каждая является массивом dx = [dx1, dx2, ... dxn])

s = zum(Arr) % Сумма массива (бывает нужно :-) )
Arr - одномерный массив
s - сумма


