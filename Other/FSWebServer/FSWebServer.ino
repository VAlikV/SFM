#include <WiFi.h>
#include <WiFiClient.h>
#include <WebServer.h>
#include <ESPmDNS.h>

#include <Adafruit_ADS1X15.h>
#include <Wire.h>

//Adafruit_ADS1015 ads;

#define FILESYSTEM SPIFFS

#if FILESYSTEM == FFat
#include <FFat.h>
#endif
#if FILESYSTEM == SPIFFS
#include <SPIFFS.h>
#endif

IPAddress apIP(192, 168, 4, 1);

// Web интерфейс для устройства
WebServer HTTP(80);
// Для файловой системы
File fsUploadFile;

float zero[121] = {2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435,
2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435,
2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435,
2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435,
2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435,
2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435,
2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435,
2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435,
2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435,
2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435,
2.4964, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435, 2.4435};

float sens[121] = {3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418,
3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418,
3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418,
3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418,
3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418,
3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418,
3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418,
3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418,
3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418,
3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418,
3.118, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418, 3.418}; // мВ/Гаусс 

double timer;
int adc0;
float volts = 0;

// Определяем переменные wifi
String _ssidAP = "Magnitometr";   // SSID AP точки доступа
String _passwordAP = "mmmmmmmm"; // пароль точки доступа

void setup() {
  Serial.begin(115200);
  pinMode(LED_BUILTIN, OUTPUT);

  /*
  ads.setGain(GAIN_TWOTHIRDS);  // 2/3x gain +/- 6.144V    0.1875mV (default)
  
  if (!ads.begin()) {
    Serial.println("Failed to initialize ADS.");
    digitalWrite(LED_BUILTIN, HIGH);
  }
  */
  
  delay(3000);
  Serial.println("");
  //Запускаем файловую систему 
  Serial.println("Start FS");
  FS_init();
  Serial.println("Start WIFI");
  //Запускаем WIFI
  StartAPMode();
  //Настраиваем и запускаем HTTP интерфейс
  Serial.println("Start WebServer");
  HTTP_init();

  timer = millis();
}

void loop() {
  HTTP.handleClient();
  if(millis() - timer >= 1000){
    //adc0 = ads.readADC_SingleEnded(0);
    //volts = ads.computeVolts(adc0);
    volts = 5;
    //Serial.println(volts,2);
    timer = millis();
  }
}
